name: eCat cicd

on: 
  push:
    branches:
      - devtw-github-actions
  # Optimise action runs: restrict PR only to Prod.
  pull_request:
    branches:
      - master

jobs:
  build-deploy:
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'recursive'
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        java-package: 'jdk'
        distribution: 'temurin'
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven
      run: |
        git submodule update --init --recursive
        mvn -B -V install -DskipTests=true -Dmaven.javadoc.skip=true

    - name: Deploy to AWS S3
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2
    
    - name: Config and deploy dev branch
      if: github.ref == 'refs/heads/devtw-github-actions'
      run: aws s3 sync --exclude '*' --include 'web/target/geonetwork.war' . s3://tw-aws-s3-bucket/dev

    - name: Config and deploy test branch
      if: github.ref == 'refs/heads/test'
      run: aws s3 sync --exclude '*' --include 'web/target/geonetwork.war' . s3://tw-aws-s3-bucket/test

    - name: Config and deploy prod branch
      if: github.ref == 'refs/heads/master'
      run: aws s3 sync --exclude '*' --include 'web/target/geonetwork.war' . s3://tw-aws-s3-bucket/prod
